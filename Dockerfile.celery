# Stage 1: Installing uv and the project dependencies
FROM python:3.10-slim-bullseye AS builder
WORKDIR /app
RUN python -m venv .venv
ENV PATH="/app/.venv/bin:$PATH"
COPY pyproject.toml uv.lock ./
RUN pip install uv && uv sync

# Stage 2: Final image with Chrome and Chromedriver
FROM python:3.10-slim-bullseye AS celery_setup

COPY --from=builder /app/.venv /app/.venv

# Install dependencies
RUN apt-get update && apt-get install -y \
    wget curl unzip gnupg ca-certificates fonts-liberation libappindicator3-1 libasound2 libatk-bridge2.0-0 libatk1.0-0 \
    libcups2 libdbus-1-3 libgdk-pixbuf2.0-0 libnspr4 libnss3 libx11-xcb1 libxcomposite1 libxdamage1 libxrandr2 \
    xdg-utils libgbm1 libu2f-udev libvulkan1 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Set environment
ENV PATH="/app/.venv/bin:$PATH" \
    PYTHONPATH="/app:/app/.venv/lib/python3.10/site-packages"

# Copy project files
COPY . /app

# Install fixed version of ChromeDriver (adjust if needed)
ENV CHROMEDRIVER_VERSION=136.0.7103.113
    #Telechargement de chrome driver
RUN wget -q https://storage.googleapis.com/chrome-for-testing-public/${CHROMEDRIVER_VERSION}/linux64/chromedriver-linux64.zip \
    && unzip chromedriver-linux64.zip -d /app/data_extraction/Websites/ \
    && chmod +x /app/data_extraction/Websites/chromedriver-linux64 \
    && rm chromedriver-linux64.zip\
    #Telechargement de chrome
    && wget -q https://storage.googleapis.com/chrome-for-testing-public/${CHROMEDRIVER_VERSION}/linux64/chrome-linux64.zip \
    && unzip chrome-linux64.zip -d /app/data_extraction/Websites/ \
    && chmod +x /app/data_extraction/Websites/chrome-linux64 \
    && rm chrome-linux64.zip


# Create users
RUN groupadd --gid 1000 celery_group \
    && useradd --uid 1000 --gid 1000 -m celery_user

# Ensure log folder exists
RUN mkdir -p /app/data_extraction/Websites/log
RUN chown -R celery_user:celery_group /app/data_extraction

# Set workdir
WORKDIR /app
